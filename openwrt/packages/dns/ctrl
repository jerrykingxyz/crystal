#!/bin/sh

set -e

CUR_DIR=$(dirname "$(readlink -f -- "$0")")
OPENWRT_DIR=$(dirname $(dirname $CUR_DIR))
TEMP_DIR="$OPENWRT_DIR/temp_conf"
source $OPENWRT_DIR/utils

ACTION=$1
CFG_FILE="$CUR_DIR/config"
TEMPLATE_FILE="$CUR_DIR/template.cfg"
OUTPUT_CFG_FILE="$TEMP_DIR/dns_config"
AD_DOMAIN_FILE="$TEMP_DIR/dns_ad_list"
PROXY_DOMAIN_FILE="$TEMP_DIR/dns_proxy_list"

set_as_forward_dnsmasq() {
    local port=$(get_config_var $CFG_FILE "port")
    local addr="127.0.0.1#$port"
    uci -q delete dhcp.@dnsmasq[0].server || true
    uci -q add_list dhcp.@dnsmasq[0].server="$addr"
    uci -q set dhcp.@dnsmasq[0].noresolv=1
    uci -q set dhcp.@dnsmasq[0].rebind_protection=0
    uci -q set dhcp.@dnsmasq[0].domainneeded=0
    uci commit dhcp
}

unset_as_forward_dnsmasq() {
    uci -q delete dhcp.@dnsmasq[0].server || true
    uci -q delete dhcp.@dnsmasq[0].noresolv || true
    uci -q set dhcp.@dnsmasq[0].rebind_protection=1
    uci -q set dhcp.@dnsmasq[0].domainneeded=1
    uci commit dhcp
}

if [ "$ACTION" = "setup" ]; then
    # install from github
    opkg install "https://github.com/pymumu/smartdns/releases/download/Release41/smartdns.1.2023.03.04-1125.$(uname -m)-openwrt-all.ipk"
    /etc/init.d/smartdns disable

    # download ad domain list
    wget https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt -O $AD_DOMAIN_FILE
    update_config_var $CFG_FILE "ad_domain_file" $AD_DOMAIN_FILE

    # download proxy domain list
    wget https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt -O $PROXY_DOMAIN_FILE
    update_config_var $CFG_FILE "proxy_domain_file" $PROXY_DOMAIN_FILE
fi

if [ "$ACTION" = "start" ]; then
    render_config $TEMPLATE_FILE $CFG_FILE > $OUTPUT_CFG_FILE
    smartdns -c $OUTPUT_CFG_FILE
    set_as_forward_dnsmasq
    /etc/init.d/dnsmasq reload
    unset_as_forward_dnsmasq
fi

if [ "$ACTION" = "restart" ]; then
    "$0" start
fi

if [ "$ACTION" = "stop" ]; then
    kill_with_process_name smartdns
    /etc/init.d/dnsmasq reload
fi

if [ "$ACTION" = "config" ]; then
    update_config_var $CFG_FILE "$2" "$3"
fi

if [ "$ACTION" = "remove" ]; then
    opkg remove smartdns
fi
