#!/bin/sh

set -e

# go to current dir
cd "$(dirname -- "${BASH_SOURCE[0]}")"
source ../../utils

ACTION=$1
CFG_FILE="$TEMP_DIR/dns_config"
AD_DOMAIN_FILE="$TEMP_DIR/dns_ad_list"
PROXY_DOMAIN_FILE="$TEMP_DIR/dns_proxy_list"

set_as_forward_dnsmasq() {
    local port=$(get_config_var ./config "port")
    local addr="127.0.0.1#$port"
    uci -q delete dhcp.@dnsmasq[0].server
    uci -q add_list dhcp.@dnsmasq[0].server="$addr"
    uci -q set dhcp.@dnsmasq[0].noresolv=1
    uci -q set dhcp.@dnsmasq[0].rebind_protection=0
    uci -q set dhcp.@dnsmasq[0].domainneeded=0
    uci commit dhcp
    /etc/init.d/dnsmasq reload
}

unset_as_forward_dnsmasq() {
    uci -q delete dhcp.@dnsmasq[0].server
    uci -q delete dhcp.@dnsmasq[0].noresolv
    uci -q set dhcp.@dnsmasq[0].rebind_protection=1
    uci -q set dhcp.@dnsmasq[0].domainneeded=1
    uci commit dhcp
    /etc/init.d/dnsmasq reload
}

if [ "$ACTION" = "setup" ]; then
    # install and disable smartdns
    opkg install smartdns
    /etc/init.d/smartdns disable

    # download ad domain list
    wget https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt -O $AD_DOMAIN_FILE
    update_config_var ./config "ad_domain_file" $AD_DOMAIN_FILE

    # download proxy domain list
    wget https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt -O $PROXY_DOMAIN_FILE
    update_config_var ./config "proxy_domain_file" $PROXY_DOMAIN_FILE
fi

if [ "$ACTION" = "start" ]; then
    render_config ./template.cfg ./config > $CFG_FILE
    smartdns -c $CFG_FILE
    set_as_forward_dnsmasq
fi

if [ "$ACTION" = "stop" ]; then
    kill -9 $(pgrep -f smartdns)
    unset_as_forward_dnsmasq
fi

if [ "$ACTION" = "config" ]; then
    update_config_var ./config $2 $3
fi
